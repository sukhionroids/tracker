@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<AuthorizeView>
    <Authorized>
        <div class="top-bar">
            <div class="user-info">
                <span>Hello, @context.User.Identity?.Name!</span>
            </div>
            <button class="btn btn-link" @onclick="BeginLogout">Logout</button>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="top-bar">
            <div class="user-info">
                <span>Not signed in</span>
            </div>
            <button class="btn btn-link" @onclick="BeginLogin">Login</button>
        </div>
    </NotAuthorized>
</AuthorizeView>

<main>
    @Body
</main>

<div class="bottom-nav">
    <NavLink class="nav-item" href="" Match="NavLinkMatch.All">
        <span class="nav-icon"><i class="bi bi-house"></i></span>
        <span>Home</span>
    </NavLink>
    <NavLink class="nav-item" href="progress">
        <span class="nav-icon"><i class="bi bi-bar-chart"></i></span>
        <span>Progress</span>
    </NavLink>
    <NavLink class="nav-item" href="profile">
        <span class="nav-icon"><i class="bi bi-person"></i></span>
        <span>Profile</span>
    </NavLink>
</div>

@code {
    private void BeginLogin()
    {
        Navigation.NavigateToLogin("authentication/login");
    }

    private async Task BeginLogout()
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateToLogout("authentication/logout");
    }
}
